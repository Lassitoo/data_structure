"""
Django settings for data_structure project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-2848^h2m_(d08=c*4m$^hd-iqc4b+*c72j*i!lt2ql1%a35k)@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',  # Django REST Framework for API development
    'documents',  # Custom app for handling documents
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'data_structure.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'data_structure.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# # Database - MongoDB configuration
# DATABASES = {
#     'default': {
#         'ENGINE': 'djongo',
#         'NAME': 'data_structure_db',
#         'CLIENT': {
#             'host': 'mongodb://localhost:27017',
#         }
#     }
# }
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# settings.py
import requests
import json

import requests

# Configuration du modèle llama3.2:latest optimisée pour gros documents
MISTRAL_CONFIG = {
    'base_url': 'http://localhost:11434',
    'model': 'llama3.2:latest',          # Votre modèle
    'num_ctx': 131072,                   # 128k tokens (au lieu de 32768 pour gros documents)
    'temperature': 0.3,                  # Votre valeur (bonne pour précision)
    'top_p': 0.95,                       # Ajout pour meilleur contrôle
    'num_predict': 4096,                 # Plus de tokens de sortie
    'repeat_penalty': 1.1,               # Éviter répétitions
    'timeout': 300,                      # 5 minutes timeout pour gros docs
}

# Configuration alternative pour documents très volumineux
MISTRAL_CONFIG_LARGE_DOCS = {
    'base_url': 'http://localhost:11434',
    'model': 'llama3.2:latest',
    'num_ctx': 200000,                   # 200k tokens si votre système le supporte
    'temperature': 0.2,                  # Plus de déterminisme
    'top_p': 0.98,
    'num_predict': 6144,                 # Réponses plus détaillées
    'timeout': 600,                      # 10 minutes pour très gros docs
}

# Seuils de gestion automatique des documents
DOCUMENT_PROCESSING_THRESHOLDS = {
    'small_doc': 50000,        # < 50k chars: traitement complet
    'medium_doc': 100000,      # 50k-100k chars: optimisation légère
    'large_doc': 200000,       # 100k-200k chars: échantillonnage intelligent
    'xlarge_doc': 500000,      # > 500k chars: stratégies spéciales
    'max_allowed': 2000000,    # 2M chars max (refuser au-delà)
}

# Configuration de performance
PERFORMANCE_SETTINGS = {
    'chunk_overlap': 2000,              # Overlap entre chunks
    'sample_ratio_large': 0.4,          # 40% du document pour les gros docs
    'max_retries': 3,                   # Tentatives de retry
    'fallback_threshold': 10,           # Réponse minimale acceptable (chars)
    'timeout_per_request': 300,         # 5 min par requête
    'memory_limit_gb': 16,              # Limite mémoire système
}



# Configuration des fichiers supportés
SUPPORTED_FILE_TYPES = {
    'application/pdf': '.pdf',
    'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',
    'application/msword': '.doc',
    'application/vnd.ms-excel': '.xls',
    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',
    'text/plain': '.txt',
    'image/jpeg': '.jpg',
    'image/png': '.png',
}

# Taille maximale des fichiers (en bytes)
MAX_FILE_SIZE = 10 * 1024 * 1024  # 10MB

# Configuration REST Framework
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
}

# Logging
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'logs' / 'django.log',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'documents': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Créer le dossier logs s'il n'existe pas
os.makedirs(BASE_DIR / 'logs', exist_ok=True)