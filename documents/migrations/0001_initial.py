# Generated by Django 5.2.5 on 2025-08-11 22:04

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ai_pre_annotations', models.JSONField(blank=True, default=dict, verbose_name='Pré-annotations IA')),
                ('final_annotations', models.JSONField(blank=True, default=dict, verbose_name='Annotations finales')),
                ('is_complete', models.BooleanField(default=False, verbose_name='Annotation complète')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Annotation validée')),
                ('confidence_score', models.FloatField(blank=True, null=True, verbose_name='Score de confiance')),
                ('validation_notes', models.TextField(blank=True, verbose_name='Notes de validation')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Complété le')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validé le')),
                ('annotated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='annotations', to=settings.AUTH_USER_MODEL, verbose_name='Annoté par')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_annotations', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Annotation',
                'verbose_name_plural': 'Annotations',
            },
        ),
        migrations.CreateModel(
            name='AnnotationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action_type', models.CharField(choices=[('created', 'Créé'), ('updated', 'Modifié'), ('validated', 'Validé'), ('rejected', 'Rejeté')], max_length=20, verbose_name="Type d'action")),
                ('field_name', models.CharField(blank=True, max_length=255, verbose_name='Nom du champ modifié')),
                ('old_value', models.JSONField(blank=True, null=True, verbose_name='Ancienne valeur')),
                ('new_value', models.JSONField(blank=True, null=True, verbose_name='Nouvelle valeur')),
                ('comment', models.TextField(blank=True, verbose_name='Commentaire')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='documents.annotation', verbose_name='Annotation')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Effectué par')),
            ],
            options={
                'verbose_name': "Historique d'annotation",
                'verbose_name_plural': "Historiques d'annotation",
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AnnotationSchema',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom du schéma')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('ai_generated_schema', models.JSONField(blank=True, default=dict, verbose_name="Schéma généré par l'IA")),
                ('final_schema', models.JSONField(blank=True, default=dict, verbose_name='Schéma final')),
                ('is_validated', models.BooleanField(default=False, verbose_name='Schéma validé')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validé le')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': "Schéma d'annotation",
                'verbose_name_plural': "Schémas d'annotation",
            },
        ),
        migrations.CreateModel(
            name='AnnotationField',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Nom du champ')),
                ('label', models.CharField(max_length=255, verbose_name='Label')),
                ('field_type', models.CharField(choices=[('text', 'Texte'), ('number', 'Nombre'), ('date', 'Date'), ('boolean', 'Booléen'), ('choice', 'Choix unique'), ('multiple_choice', 'Choix multiple'), ('entity', 'Entité nommée'), ('classification', 'Classification')], max_length=20, verbose_name='Type de champ')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_required', models.BooleanField(default=False, verbose_name='Obligatoire')),
                ('is_multiple', models.BooleanField(default=False, verbose_name='Valeurs multiples')),
                ('choices', models.JSONField(blank=True, default=list, verbose_name='Choix disponibles')),
                ('order', models.PositiveIntegerField(default=0, verbose_name="Ordre d'affichage")),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('schema', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fields', to='documents.annotationschema', verbose_name='Schéma')),
            ],
            options={
                'verbose_name': "Champ d'annotation",
                'verbose_name_plural': "Champs d'annotation",
                'ordering': ['order', 'name'],
            },
        ),
        migrations.AddField(
            model_name='annotation',
            name='schema',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='documents.annotationschema', verbose_name='Schéma utilisé'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='Titre')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('file', models.FileField(upload_to='documents/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'doc', 'txt', 'xlsx', 'xls', 'jpg', 'jpeg', 'png'])], verbose_name='Fichier')),
                ('file_type', models.CharField(choices=[('pdf', 'PDF'), ('docx', 'Word Document'), ('doc', 'Word Document (ancien)'), ('txt', 'Texte'), ('xlsx', 'Excel'), ('xls', 'Excel (ancien)'), ('image', 'Image')], max_length=20, verbose_name='Type de fichier')),
                ('file_size', models.BigIntegerField(verbose_name='Taille du fichier (bytes)')),
                ('status', models.CharField(choices=[('uploaded', 'Téléversé'), ('metadata_extracted', 'Métadonnées extraites'), ('schema_proposed', 'Schéma proposé'), ('schema_validated', 'Schéma validé'), ('pre_annotated', 'Pré-annoté'), ('annotated', 'Annoté'), ('validated', 'Validé')], default='uploaded', max_length=20, verbose_name='Statut')),
                ('metadata', models.JSONField(blank=True, default=dict, verbose_name='Métadonnées')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Modifié le')),
                ('annotated_at', models.DateTimeField(blank=True, null=True, verbose_name='Annoté le')),
                ('validated_at', models.DateTimeField(blank=True, null=True, verbose_name='Validé le')),
                ('annotated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='annotated_documents', to=settings.AUTH_USER_MODEL, verbose_name='Annoté par')),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL, verbose_name='Téléversé par')),
                ('validated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='validated_documents', to=settings.AUTH_USER_MODEL, verbose_name='Validé par')),
            ],
            options={
                'verbose_name': 'Document',
                'verbose_name_plural': 'Documents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='annotationschema',
            name='document',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='annotation_schema', to='documents.document', verbose_name='Document'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='document',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='annotation', to='documents.document', verbose_name='Document'),
        ),
    ]
